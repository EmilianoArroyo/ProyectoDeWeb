name: CyberMusik

on:
  push:
    branches:
      - main  # Desplegar solo desde la rama principal

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Clonar el repositorio
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.17.0'

      # 3. Instalar dependencias
      - name: Install dependencies
        run: npm install

      # 4. Análisis de seguridad (SAST)
      - name: Run SAST with ESLint
        run: npx eslint . --format @microsoft/eslint-formatter-sarif --output-file eslint-results.sarif

      # 5. Análisis de vulnerabilidades (SCA)
      - name: Run SCA with npm audit
        run: npm audit --audit-level=moderate

      # 6. Escaneo de secretos con TruffleHog
      - name: Run Secret Scanning with TruffleHog
        run: |
          trufflehog --json https://github.com/EmilianoArroyo/ProyectoDeWeb --allow-env

      # 7. Configurar variables de entorno
      - name: Set up environment variables
        env:
          mongoUrl: ${{ secrets.mongoUrl }}
        run: |
          echo "mongoUrl=$mongoUrl" >> .env
          echo "PORT=3000" >> .env

      # 8. Desplegar en Render mediante API
      - name: Deploy to Render
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        run: |
          curl -X POST \
            -H "Authorization: Bearer $RENDER_API_KEY" \
            -H "Content-Type: application/json" \
            -d '{"serviceId": "srv-cspda056l47c73es4t8g"}' \
            https://api.render.com/v1/services/srv-cspda056l47c73es4t8g/deploys

      # 9. Verificar despliegue
      - name: Verify Deployment
        run: |
          curl -I https://cybermusik.onrender.com
